plot(cells)
Fc <- Fest(cells)
Fc
par(pty = "s")
plot(Fest(cells))
plot(Fest(cells), hazard ~ r, main = "Hazard rate of F")
plot(Fest(cells), cbind(km, rs, raw, theo) ~ r)
par(pty = "s")
plot(Fest(cells), cbind(km, rs, raw, theo) ~ r)
plot(Fest(cells), cbind(km, rs, theo) ~ theo)
plot(Fest(cells), . ~ theo) # same as above. "." means "all recommended estimates"
plot(Fest(cells), . ~ theo ~ r)
plot(Fest(cells), . - theo ~ r)
plot(Fest(cells), asin(sqrt(.)) ~ r)
library(rgdal)
Gc <- Gest(cells)
library(spatstat)
Gc <- Gest(cells)
Gc
par(pty = "s")
plot(Gc)
fisher <- function(x) {asin(sqrt(x))}
plot(Gest(cells), fisher(.) ~ fisher(theo))
Gc <- Kest(cells); Gc
par(pty = "s")
plot(Kest(cells))
L <- Lest(cells)
plot(L, main = "L function")
plot(pcf(cells))
plot(K, sqrt(./pi) ~ r)
K <- Kest(cells)
plot(K, sqrt(./pi) ~ r)
L <- eval.fv(sqrt(K/pi))
L
K <- Kest(cells); K
L <- eval.fv(sqrt(K/pi)); L
g <- pcf(K)
g <- pcf(K); g
plot(allstats(cells))
data(redwood)
K <- Kest(redwood)
y <- with(K, iso - theo)
x <- with(K, r)
L <- with(K, sqrt(./pi))
with(Kest(redwood), max(abs(iso - theo)))
plot(K, sqrt(./pi) ~ r)
plot(K, cbind(iso, theo) ~ r)
K <- Kest(redwood)
L <- eval.fv(sqrt(K/pi))
pi
K1 <- Kest(redwood)
K2 <- Kest(runifpoint(redwood$n, redwood$window))
DK <- eval.fv(K1 - K2)
par(mfrow = c(1,2))
library(spatstat)
X <- rcell(nx = 15)
?rcell
plot(X)
plot(Kest(X))
X <- rpoispp(function(x,y) {300 * exp(-3 * x) } )
plot(X)
plot(Kest(X))
plot(Kest(rpoispp(50)))
E <- envelope(cells, Kest, nsim = 39, rank = 1); E
plot(E, main = "pointwise envelopes")
E <- envelope(cells, Kest, nsim = 39, rank = 1); E#
plot(E, main = "pointwise envelopes")
E <- envelope(cells, Kest, nsim = 19, rank = 1, global = TRUE)
plot(E, main = "global envelopes")
E <- envelope(cells, Lest, nsim = 19, rank = 1, global = TRUE)
plot(E, main = "global envelopes of L(r)")
data(bei)
fit <- ppm(bei, ~elev + grad, covariates = bei.extra)
E <- envelope(fit, Lest, nsim = 19, global = TRUE, correction = "border")
plot(E, main = "envelope for inhomogeneous Poisson")
plot(bei)
sim <- expression(rpoispp(100))
data(cells)
e <- expression(runifpoint(cells$n, cells$window))
E <- envelope(cells, Lest, nsim = 19, global = TRUE, simulate = e)
plot(E, main = "envelope with fixed n")
data(cells)
SimPatList <- list()
list()
for (i in 1:1000) SimPatList[[i]] <- runifpoint(cels$n)
EK <- envelope(cells, Kest, simulate = SimPatList, nsim = 1000)
for (i in 1:1000) SimPatList[[i]] <- runifpoint(cells$n)
EK <- envelope(cells, Kest, simulate = SimPatList, nsim = 1000)
Ep <- envelope(cells, pcf, simulate = SimPatList, nsim = 1000)
x <- seq(1,100)
y <- log(x)
plot(x,y)
x <- seq(1,1000)
y <- log(x)
plot(x,y)
x <- seq(1,1000)#
y <- log(x, 2)#
plot(x,y, add = TRUE)
?log
y <- log(x, base=2)
x <- seq(1,1000)#
y <- log(x, base=2)#
plot(x,y, add = TRUE)
?plot
plot(x~y, add = TRUE)
plot(y~x, add = TRUE)
plot(x,y)
x <- seq(1,1000)#
y <- log(x)#
plot(x,y)#
#
x <- seq(1,1000)#
y <- log(x, base=2)#
plot(y~x, add = TRUE)
plot(y~x)
x <- seq(1,1000)#
y <- log(x)#
plot(y~x)
x <- seq(1,1000)#
y <- log(x, base=2)#
plot(y~x, add = TRUE)
?plot
points(y~x, add = TRUE)
points(x,y, add = TRUE)
points(x,y)
x <- seq(1,1000)#
y <- log(x)#
plot(y~x)#
#
x <- seq(1,1000)#
y <- log(x, base=2)#
points(x,y)
x <- seq(1,1000)#
y <- log(x)#
plot(y~x)
y <- log(x, base=0.5)
points(x,y)
x <- seq(1,1000)#
y <- log(x)#
plot(y~x)#
#
x <- seq(1,1000)#
y <- log(x, base=0.5)#
points(x,y)
y <- log(x, base=0.5)
y
x <- seq(1,1000)#
y <- log(x,10)#
plot(y~x)#
#
#
y <- log(x,5)#
points(x,y)
x <- seq(1,1000)#
y <- log(x,5)#
plot(y~x)#
#
#
y <- log(x,10)#
points(x,y)
lines(x,y)
x <- seq(1,1000)#
y <- log(x,5)#
plot(y~x)#
#
#
y <- log(x,10)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,5)#
plot(y~x)#
#
#
y <- log(x,15)#
lines(x,y)
par(mfrow=c(1,1))
lines(x,y)
x <- seq(1,1000)#
y <- log(x,5)#
plot(y~x)#
#
y <- log(x,15)#
lines(x,y)
?plot
plot(y~x, type=l)
plot(y~x, type="l")
x <- seq(1,1000)#
y <- log(x,5)#
plot(y~x, type="l")#
#
y <- log(x,15)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,1)#
plot(y~x, type="l")#
#
y <- log(x,10)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,1)#
plot(y~x, type="l")
y <- log(x,2)
y <- log(x,1)
y <- log(x,2)
x <- seq(1,1000)#
y <- log(x,2)#
plot(y~x, type="l")#
#
y <- log(x,10)#
lines(x,y)
y <- log(x,10)
x <- seq(1,1000)#
y <- log(x,10)#
plot(y~x, type="l")#
#
y <- log(x,100)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,10)#
plot(y~x, type="l", label = "Barrier Effects on Genetic Differentiation", xlab = "generations", ylab = "genetic differentiation")#
#
y <- log(x,100)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,1000)#
plot(y~x, type="l", label = "Barrier Effects on Genetic Differentiation", xlab = "generations", ylab = "genetic differentiation")#
#
y <- log(x,10000)#
lines(x,y)
x <- seq(1,1000)#
y <- log(x,1000)#
plot(y~x, type="l", label = "Barrier Effects on Genetic Differentiation", xlab = "generations", ylab = "genetic differentiation")#
#
y <- log(x,100000)#
lines(x,y)
x <- rep(1,1000)
y <- -1/x
plot(x,y)
x <- seq(1,1000)
y <- -1/x
plot(x,y)
y <- 1/x
lines(x,y)
plot(x,y, type = "l")
x <- seq(1,1000)#
y <- -1/x#
plot(x,y, type = "l")#
y <- 1/x#
lines(x,y)
x <- seq(1,1000)
y <- -1/x + 1
plot(x,y, type = "l")
y <- log(x)
lines(x,y)
y <- log(x,10)
lines(x,y)
y <- log(x,1000)
lines(x,y)
y <- log(x,100)
lines(x,y)
y <- log(x,100)
plot(x,y, type = "l")
x <- seq(1,1000000)
y <- log(x,100)
plot(x,y, type = "l")
x <- seq(1,1000000)
y <- log(x,1000)
plot(x,y, type = "l")
y <- log(x,10000)
plot(x,y, type = "l")
y <- log(x,100000)
plot(x,y, type = "l")
b <- c(1,10,100)
y <- log(x,b)
for i in (1:length(b))#
{#
	y <- log(x,i)#
	}
b <- c(1,10,100)#
for b in (1:length(b))#
{#
	y <- log(x,b)#
	}
for b in (1:3)
?for
)
?"for"
for (b in 1:3)
{#
	y <- log(x,b)#
	}
y
x <- seq(1,10)
b <- c(1,10,100)
for (b in 1:3)
{
	y <- log(x,b)
	}
y
b <- c(1,10,100)#
for (i in b)#
{#
	y <- log(x,i)#
	}
log(1)
+
)
log(10)
log(100)
log(1,1)
x <- seq(1,10)#
b <- c(10,100,1000)#
for (i in b)#
{#
	y <- log(x,i)#
	}
y
y <- matrix(10,3)
y <- matrix(10,3)#
for (i in b)#
{#
	y[i] <- log(x,i)#
	}
y <- matrix(10,3)#
for (i in b)#
{#
	y[,i] <- log(x,i)#
	}
y
y[,1]
y[1]
y <- matrix(10,3)
y
y <- matrix(10,3)
y
y <- matrix(10,30)
y <- matrix(10,30);y
y <- matrix(0,10,3);y
y[i]
y[i,1]
x <- seq(1,10)#
b <- c(10,100,1000)#
y <- matrix(0,10,3);y#
for (i in b)#
{#
	y[,i] <- log(x,i)#
	}
y
for (i in 1:b)
{#
	y[,i] <- log(x,i)#
	}
for (i in 1:length(b))
{
	y[,i] <- log(x,i)
	}
length(b)
library(picante)
vignette("picante-intro")
setwd("/Users/kjj/Documents/_NAU/Classes/G2E/Phylomeet/Analysis/arthro_cottonwood")#
fullphy <- read.nexus("arthro_cot_ultra.trees")#
plot(fullphy, cex=0.25)#
#
# Community with all arthropods#
#comm <- data.matrix(read.csv("arthro_cot_2003.csv"))#
#
# Community with insects only#
comm <- data.matrix(read.table("arthro_cot_2003_insect.txt"))#
#
#trait <- read.table("arthrotrait.txt")#
#write.table(comm[,36:111], "acom.txt")#
#
# prune tree#
phy <- prune.sample(comm,fullphy) # cuts down the phylogeny to include only what's in the community#
plot(phy, cex=0.4)
out.cor.cij.richness <- comm.phylo.cor(comm, phy, metric = "cij", null.model = "richness", runs = 999)
out.cor.cij.rich <- out.cor.cij.richness
out.cor.cij.rich
out.cor.cij.freq <- comm.phylo.cor(comm, phy, metric = "cij", null.model = "frequency", runs = 999)
out.cor.jac.rich <- comm.phylo.cor(comm,phy, metric = "jaccard", null.model = "richness", runs = 999)
warnings()
out.cor.doij.rich <- comm.phylo.cor(comm,phy, metric = "doij", null.model = "richness", runs = 999)
out.cor.doij.rich
out.cor.cij.freq
plot(phy, cex=0.4)
plot(phy, cex=0.4)
phydist <- cophenetic(phy)#
out.ses.mpd <- ses.mpd(comm, phydist, null.model = "independentswap", abundance.weighted = TRUE, runs = 999)#
write.csv(out.ses.mpd,"nri_ultra_indswap.csv")
phydist <- cophenetic(phy)#
out.ses.mpd <- ses.mpd(comm, phydist, null.model = "trialswap", abundance.weighted = TRUE, runs = 999)#
write.csv(out.ses.mpd,"nri_ultra_triswap.csv")
out.ses.mpd <- ses.mpd(comm, phydist, cstSor = FALSE, null.model = "independentswap", abundance.weighted = TRUE, runs = 999)#
write.csv(out.ses.mpd,"nri_ultra_indswap.csv")
out.ses.mpd <- ses.mpd(comm, phydist, cstSor = TRUE, null.model = "independentswap", abundance.weighted = TRUE, runs = 999)
comm <- data.matrix(read.table("arthro_cot_2003.txt"))
fullphy <- read.nexus("arthro_cot_ultra.trees")
phy <- prune.sample(comm,fullphy) # cuts down the phylogeny to include only what's in the community
plot(phy, cex=0.4)
phydist <- cophenetic(phy)#
#
# not abundance weighted#
#out.comdist.uw <- comdist(comm, phydist, abundance.weighted=FALSE)#
##
#library(cluster)#
#phy.comdist.uw.clusters <- hclust(phy.comdist)#
#plot(phy.comdist.uw.clusters, cex=0.5)#
#
# abundance weighted#
out.comdist <- comdist(comm, phydist, abundance.weighted=TRUE)#
write(out.comdist, "comdistall.txt", ncol=nrow(comm))#
#
library(cluster)#
out.comdist.clusters <- hclust(out.comdist)#
plot(out.comdist.clusters, cex=1)
phydist <- cophenetic(phy)#
out.comdistnt <- comdistnt(comm, phydist, abundance.weighted=TRUE)#
library(cluster)#
out.comdistnt.clusters <- hclust(out.comdistnt)#
plot(out.comdistnt.clusters, cex=1)#
write(out.comdistnt, "comdistntall.txt", ncol=nrow(comm))
out.comdist <- comdist(comm, phydist, abundance.weighted=TRUE)#
write(out.comdist, "comdistall.txt", ncol=nrow(comm))#
#
library(cluster)#
out.comdist.clusters <- hclust(out.comdist)#
plot(out.comdist.clusters, cex=1)
setwd("/Users/kjj/Documents/_NAU/Classes/G2E/Phylomeet/Analysis/arthro_cot_bl")#
fullphy <- read.nexus("arthro_cot_bltest.trees")#
plot(fullphy, cex=0.25)#
#
# Community with all arthropods#
#comm <- data.matrix(read.csv("arthro_cot_2003.csv"))#
#
# Community with insects only#
comm <- data.matrix(read.table("arthro_cot_2003_insect.txt"))
