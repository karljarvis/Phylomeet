loc1 <- Locus( c( 120, 122))
loc1
loc2 <- Locus( c("A","T"))
loc2
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))
Env <- c(12,20,14,18,10)
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )
thePop
summary(thePop)
names(thePop)
thePop[1,2]
thePop$Pop[1:4]
thePop[thePop$Env>12,]
pops <- partition(thePop, stratum="Pop")
class(pops)
names(pops)
pops[[1]]
pops["Loreto"]
class(pops$Cabo)
lapply( pops, function(x) mean(x $Env))
data(araptus_attenuatus)
summary(araptus_attenuatus)
pops <- araptus_attenuatus[ araptus_attenuatus$Species != "CladeB", ]
summary(pops)
freqs <- allele.frequencies( pops, loci="AML")
freqs
freqs <- allele.frequencies( pops, loci=c("ATPS","LTRS"))
freqs
ATPS
pops$ATPS
araptus_attenuaus$ATPS
araptus_attenuatus$ATPS
data(araptus_attenuatus)#
araptus.ltrs.freq <- allele.frequencies(araptus_attenuatus,"LTRS")#
araptus.ltrs.freq
araptus.WNT.freq <- allele.frequencies(araptus_attenuatus,"WNT")#
araptus.WNT.freq
all.freqs <- allele.frequencies(araptus_attenuatus)#
print(all.freqs[1:2])
print(freqs)
show(freqs)
freqs
?show
freqs$ATPS
freqs[[1]]
freqs[[2]]
freqs[[3]]
freqs[1]
freqs[1,]
class(freqs)
thePop[1,2]
thePop[2,2]
class(thePop)
summary(thePop)
require(gstudio)
loc1 <- Locus( c( 120, 122))#
loc1#
loc2 <- Locus( c("A","T"))#
loc2#
loc3 <- Locus( c(122,122))#
loc3#
#
is.heterozygote(loc3)#
loc3[2]#
loc3[2] <- "124"#
is.heterozygote(loc3)#
length( loc3 )#
summary( loc3 )#
#
###########################################
# Population object#
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")#
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))#
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))#
Env <- c(12,20,14,18,10)#
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )#
thePop#
summary(thePop)#
names(thePop)#
thePop[1,2]#
thePop$Pop[1:4]#
thePop[thePop$Env>12,]#
pops <- partition(thePop, stratum="Pop")#
class(pops)#
names(pops)#
pops[[1]]#
pops["Loreto"]#
class(pops$Cabo)#
lapply( pops, dim )#
lapply( pops, function(x) mean(x $Env))#
#
data(araptus_attenuatus)#
summary(araptus_attenuatus)#
pops <- araptus_attenuatus[ araptus_attenuatus$Species != "CladeB", ]#
summary(pops)#
#
###########################################
freqs <- allele.frequencies( pops, loci="AML")#
print(freqs)#
freqs <- allele.frequencies( pops, loci=c("ATPS","LTRS"))#
freqs
call(freqs)
print(freqs)
show(freqs)
freqs <- allele.frequencies(pops)
# genetic studio stuff#
#
#install.packages(c("gstudio", "ecodist", "pegas"))#
require(gstudio)#
#
###########################################
# Locus object#
loc1 <- Locus( c( 120, 122))#
loc1#
loc2 <- Locus( c("A","T"))#
loc2#
loc3 <- Locus( c(122,122))#
loc3#
#
is.heterozygote(loc3)#
loc3[2]#
loc3[2] <- "124"#
is.heterozygote(loc3)#
length( loc3 )#
summary( loc3 )#
#
###########################################
# Population object#
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")#
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))#
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))#
Env <- c(12,20,14,18,10)#
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )#
thePop#
summary(thePop)#
names(thePop)#
thePop[1,2]#
thePop$Pop[1:4]#
thePop[thePop$Env>12,]#
pops <- partition(thePop, stratum="Pop")#
class(pops)#
names(pops)#
pops[[1]]#
pops["Loreto"]#
class(pops$Cabo)#
lapply( pops, dim )#
lapply( pops, function(x) mean(x $Env))#
#
###########################################
# Reading data from a file#
data(araptus_attenuatus)#
summary(araptus_attenuatus)#
pops <- araptus_attenuatus[ araptus_attenuatus$Species != "CladeB", ]#
summary(pops)#
#
###########################################
# Allele frequencies#
freqs <- allele.frequencies( pops, loci="AML")#
print(freqs)#
freqs <- allele.frequencies( pops, loci=c("ATPS","LTRS"))#
show(freqs)#
freqs <- allele.frequencies(pops)
lapply( pops, function(x) mean(x $Env))
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")#
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))#
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))#
Env <- c(12,20,14,18,10)#
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )#
thePop#
summary(thePop)#
names(thePop)#
thePop[1,2]#
thePop$Pop[1:4]#
thePop[thePop$Env>12,]#
pops <- partition(thePop, stratum="Pop")#
class(pops)#
names(pops)#
pops[[1]]#
pops["Loreto"]#
class(pops$Cabo)#
lapply( pops, dim )
loc1 <- Locus( c( 120, 122))#
loc1#
loc2 <- Locus( c("A","T"))#
loc2#
loc3 <- Locus( c(122,122))#
loc3#
#
is.heterozygote(loc3)#
loc3[2]#
loc3[2] <- "124"#
is.heterozygote(loc3)#
length( loc3 )#
summary( loc3 )#
#
###########################################
# Population object#
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")#
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))#
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))#
Env <- c(12,20,14,18,10)#
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )#
thePop#
summary(thePop)#
names(thePop)#
thePop[1,2]#
thePop$Pop[1:4]#
thePop[thePop$Env>12,]#
pops <- partition(thePop, stratum="Pop")#
class(pops)#
names(pops)#
pops[[1]]#
pops["Loreto"]#
class(pops$Cabo)#
lapply( pops, dim )
summary(pops)
pops
lapply(pops$Cabo)
lapply(pops$Cabo, dim)
lapply(pops, dim)
lapply(pops, function(x) mean(x$Env))
lapply(pops, function(x) dim(x$Env))
lapply(pops, function(x) dim(x$Cabo))
pops
pops$Cabo
pops$Loreto
dim(pops$Cabo)
lapply(pops,dim)
class(pops)
class(pops$Cabo)
lapply(pops,function(x) mean(x))
lapply(pops,function(x) summary(x))
lapply(pops,function(x) summary(x$Env))
lapply(pops,function(x) min(x$Env))
lapply(pops,function(x) max(x$Env))
freqs <- allele.frequencies(pops)
freqs <- allele.frequencies( pops, loci="AML")#
print(freqs)#
freqs <- allele.frequencies( pops, loci=c("ATPS","LTRS"))#
show(freqs)#
freqs <- allele.frequencies(pops)
freqs <- allele.frequencies( pops, loci="AML")
summary(pops)
?allele.frequencies
require(gstudio)
loc1 <- Locus( c( 120, 122))#
loc1#
loc2 <- Locus( c("A","T"))#
loc2#
loc3 <- Locus( c(122,122))#
loc3#
#
is.heterozygote(loc3)#
loc3[2]#
loc3[2] <- "124"#
is.heterozygote(loc3)#
length( loc3 )#
summary( loc3 )
strata <- c("Cabo","Cabo","Loreto","Loreto","Loreto")#
TPI <- c(Locus(c(1,2)), Locus(c(2,3)), Locus(c(2,2)), Locus(c(2,2)), Locus(c(1,3)))#
PGM <- c(Locus(c(4,4)), Locus(c(4,3)), Locus(c(4,4)), Locus(c(3,4)), Locus(c(3,3)))#
Env <- c(12,20,14,18,10)#
thePop <- Population( Pop=strata, Env=Env, TPI=TPI, PGM=PGM )#
thePop#
summary(thePop)#
names(thePop)#
thePop[1,2]#
thePop$Pop[1:4]#
thePop[thePop$Env>12,]#
pops <- partition(thePop, stratum="Pop")#
class(pops)#
names(pops)#
pops[[1]]#
pops["Loreto"]#
class(pops$Cabo)#
lapply( pops, dim )#
lapply( pops, function(x) mean(x $Env))
data(araptus_attenuatus)#
summary(araptus_attenuatus)#
pops <- araptus_attenuatus[ araptus_attenuatus$Species != "CladeB", ]#
summary(pops)
freqs <- allele.frequencies( pops, loci="AML")
print(freqs)
freqs <- allele.frequencies( pops, loci=c("ATPS","LTRS"))
show(freqs)
freqs <- allele.frequencies(pops)
show(freqs)
names(freqs)
freqs$MP20
ho( freqs$MP20)
he( freqs$MP20)
f <- 1-ho( freqs$MP20 ) / he( freqs$MP20 )
f
?lapply
subpops <- partition( pops, stratum="Pop")
subpops
names(subpops)
subpops$"12"
names(pops)
names(pops$Pop)
pops$Pop
names(pops)
summary(pops)
lapply(pops, dim)
class(pops)
he <- unlist(lapply( subpops, function(x) he(allele.frequencies(x, "AML")[[1]] ) ))
?unlist
a <- list(3,4,5,6,3,4,5,6 )
a
unlist(a)
list(a)
a
a' <- unlist(a)
asdlf
)
]]
[[]]
*
get me out of here!
!=
=1
=!
function(x) (blah))
)))))))))
]]]]]]]]]
unlist(a)
''
a. <- unlist(a)
a.
a
a.
?list
he <- unlist(lapply( subpops, function(x) he(allele.frequencies(x, "AML")[[1]] ) ))
he(allele.frequencies(x,"AML"))
subpops
subpops$"AML"
subpops$WNT
names(subpops)
subpops$"12"
he
he <- unlist(lapply( subpops, function(x) he(allele.frequencies(x, "AML")[[1]] ) ))
he
scaled_he <- 2*he + .5
lat <- unique(pops$Lat)
lon <- unique(pops$Long)
?unique
pops$Lat
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="n")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="m")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="o")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="n")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="a")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="c")
plot( lat, lon, xlab="Latitude", ylab="Longitude", pch=16, cex=scaled_he, bty="n")
polymorphic.loci <- function(x) {#
	sum(lapply( x, length ) > 1) / sum(length(x))#
}
polymorphic.loci
all.freqs <- lapply( subpops, allele.frequencies )
P <- lapply( all.freqs, polymorphic.loci )
names(all.freqs)
names(subpops)
all.freqs$"12"
show(all.freqs$"12")
show(subpops$"12")
names(P)
show(P$"12")
unlist(P)
class(P)
P. <- unlist(P)
class(P.)
diversity.mp20 <- genetic.diversity( pops, stratum="Pop", mode="Ae", loci="MP20")
diversity.mp20
names(pops)
diversity.mp20.AML <- genetic.diversity( pops, stratum="Pop", mode="Ae", loci=c("MP20","AML"))
diversity.mp20.AML
phys <- stratum.distance(pops, stratum="Pop", lat="Lat", lon="Long")
?stratum.distance
nei <- genetic.distance(pops, stratum="Pop", mode="Nei")[[1]]
require(ecodist)
mantel( as.dist(phys) ~ as.dist(nei) )
setwd("/Users/kjj/Documents/Phylomeet/Analysis/arcot_gw")
pd.u <- read.csv("pd.ultra.csv")
fr00.pd.u <- as.numeric(pd.u[1:10,2])#
fo00.pd.u <- as.numeric(pd.u[11:20,2])#
na00.pd.u <- as.numeric(pd.u[21:40,2])#
fr01.pd.u <- as.numeric(pd.u[41:50,2])#
fo01.pd.u <- as.numeric(pd.u[51:60,2])#
na01.pd.u <- as.numeric(pd.u[61:80,2])#
fr02.pd.u <- as.numeric(pd.u[81:90,2])#
fo02.pd.u <- as.numeric(pd.u[91:100,2])#
na02.pd.u <- as.numeric(pd.u[101:120,2])#
fr03.pd.u <- as.numeric(pd.u[121:130,2])#
fo03.pd.u <- as.numeric(pd.u[131:140,2])#
na03.pd.u <- as.numeric(pd.u[141:160,2])#
#
# bar graph#
pd.u.means <- c(mean(fr00.pd.u), mean(fo00.pd.u), mean(na00.pd.u), mean(fr01.pd.u), mean(fo01.pd.u), mean(na01.pd.u), mean(fr02.pd.u), mean(fo02.pd.u), mean(na02.pd.u), mean(fr03.pd.u), mean(fo03.pd.u), mean(na03.pd.u))#
barplot(pd.u.means, space = c(0.2,0.2,0.2,1,0.2,0.2,1,0.2,0.2,1,0.2,0.2), ylim = c(0,120), col = c("blue", "darkgreen", "gold"))
?barplot
pd.u.means <- c(mean(fr00.pd.u), mean(fo00.pd.u), mean(na00.pd.u), mean(fr01.pd.u), mean(fo01.pd.u), mean(na01.pd.u), mean(fr02.pd.u), mean(fo02.pd.u), mean(na02.pd.u), mean(fr03.pd.u), mean(fo03.pd.u), mean(na03.pd.u))#
barplot(pd.u.means, space = c(0.2,0.2,0.2,1,0.2,0.2,1,0.2,0.2,1,0.2,0.2), ylim = c(0,120), col = c("blue", "darkgreen", "gold"))
bars <- barplot(pd.u.means, space = c(0.2,0.2,0.2,1,0.2,0.2,1,0.2,0.2,1,0.2,0.2), ylim = c(0,120), col = c("blue", "darkgreen", "gold"))
?apply
bars <- barplot(pd.u.means, space = c(0.2,0.2,0.2,1,0.2,0.2,1,0.2,0.2,1,0.2,0.2), ylim = c(0,120), col = c("blue", "darkgreen", "gold"))
error.bar(bars, 1, 1)
?error.bar
error.bar(bars, 1, 1)
library(gplots)
?plotCI
barplot(pd.u.means, space = c(0.2,0.2,0.2,1,0.2,0.2,1,0.2,0.2,1,0.2,0.2), ylim = c(0,120), col = c("blue", "darkgreen", "gold"))
plotCI(pd.u.means)
?stdev
?sd
?sterr
?se
se <- function(x) sd(x)/sqrt(length(x))
pd.u <- read.csv("pd.ultra.csv")
pd.u
fr00.se.u <- se(fr00.se.u)
fr00.se.u <- se(fr00.pd.u)
fr00.se.u
fr00.pd.u
f <- matrix(pd.u, 48, 10)
f
f <- as.matrix(pd.u, 48, 10)
f
m <- matrix(c(1,2,3,4,5,6),2,3)
m
m <- matrix(c(1,2,3,4,5,6),2,3, by=row)
?matrix
m <- matrix(c(1,2,3,4,5,6),2,3, byrow=TRUE)
m
pd.u <- read.csv("pd.u1.csv")
pd.u
pd.u <- read.csv("pd.u1.csv")
pd.u
pd.u[Species]
pd.u?Species
pd.u$Species
pd.u[Species,3]
pd.u$Species[1:10]
pd.u$Sample
pd.u <- read.csv("pd.u1.csv")
pd.u$sample
pd.u$host
pd.u[pd.u==fr]
pd.u <- matrix(pd.u)
pd.u
pd.u <- read.csv("pd.u1.csv")
pd.u <- as.matrix(pd.u)
pd.u
pd.u <- read.csv("pd.u1.csv")
class(pd.u)
pd.u <- as.matrix(pd.u)
pd.u[pd.u==fr]
pd.u[pd.u=="fr"]
pd.u[pd.u=="fr",]
